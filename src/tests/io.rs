/// I/O Tests.

use std::io::Cursor;

use io;

#[test]
fn parse_header() {
    let mut data = Cursor::new(vec![
        0x1a, 0x45, 0xdf, 0xa3, 0xa3, 0x42, 0x86, 0x81, 0x01, 0x42, 0xf7, 0x81, 0x01, 0x42, 0xf2,
        0x81, 0x04, 0x42, 0xf3, 0x81, 0x08, 0x42, 0x82, 0x84, 0x77, 0x65, 0x62, 0x6d, 0xec, 0x82,
        0x00, 0x00, 0x42, 0x87, 0x81, 0x01, 0x42, 0x85, 0x81, 0x01,
    ]);

    let header = io::parse_header(&mut data).unwrap();

    assert_eq!(header.ebml_version, 1);
    assert_eq!(header.ebml_read_version, 1);
    assert_eq!(header.ebml_max_id_length, 4);
    assert_eq!(header.ebml_max_size_length, 8);
    assert_eq!(header.doc_type.as_str(), "webm");
    assert_eq!(header.doc_type_version, 1);
    assert_eq!(header.doc_type_read_version, 1);
}
